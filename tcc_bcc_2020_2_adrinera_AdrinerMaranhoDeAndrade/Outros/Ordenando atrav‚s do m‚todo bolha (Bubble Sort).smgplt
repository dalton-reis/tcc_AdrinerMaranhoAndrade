{"id":"eba87c8b-62cb-4fd6-ac15-c958a3a2c99b","name":"Ordenando através do método bolha (Bubble Sort)","description":"<p>O&nbsp;método&nbsp;bolha&nbsp;é&nbsp;um&nbsp;método&nbsp;de&nbsp;ordenação&nbsp;simples.&nbsp;Ele&nbsp;é&nbsp;executado&nbsp;percorrendo&nbsp;o&nbsp;vetor&nbsp;diversas&nbsp;vezes&nbsp;com&nbsp;o&nbsp;objetivo&nbsp;de&nbsp;a&nbsp;cada&nbsp;percorrida&nbsp;completa&nbsp;no&nbsp;vetor&nbsp;transferir&nbsp;o&nbsp;menor&nbsp;elemento&nbsp;para&nbsp;o&nbsp;topo&nbsp;da&nbsp;lista&nbsp;(no&nbsp;caso&nbsp;de&nbsp;uma&nbsp;ordenação&nbsp;crescente).</p><p><br></p><p>Sendo&nbsp;assim,&nbsp;no&nbsp;primeira&nbsp;vez&nbsp;que&nbsp;o&nbsp;vetor&nbsp;é&nbsp;percorrido,&nbsp;o&nbsp;menor&nbsp;elemento&nbsp;da&nbsp;lista&nbsp;é&nbsp;jogado&nbsp;para&nbsp;a&nbsp;primeira&nbsp;posição.&nbsp;Na&nbsp;segunda&nbsp;vez,&nbsp;o&nbsp;segundo&nbsp;menor&nbsp;elemento&nbsp;vai&nbsp;para&nbsp;a&nbsp;segunda&nbsp;posição&nbsp;e&nbsp;assim&nbsp;por&nbsp;diante.&nbsp;A&nbsp;cada&nbsp;verificação,&nbsp;ocorre&nbsp;uma&nbsp;comparação&nbsp;entre&nbsp;o&nbsp;elemento&nbsp;de&nbsp;uma&nbsp;determinada&nbsp;posição&nbsp;`n`&nbsp;e&nbsp;o&nbsp;elemento&nbsp;da&nbsp;posição&nbsp;`n&nbsp;+&nbsp;1`.&nbsp;Se&nbsp;o&nbsp;elemento&nbsp;na&nbsp;posição&nbsp;`n&nbsp;+&nbsp;1`&nbsp;for&nbsp;menor,&nbsp;são&nbsp;trocadas&nbsp;as&nbsp;posições.&nbsp;</p><p><br></p><p>Para&nbsp;realizar&nbsp;uma&nbsp;ordenação&nbsp;decrescente&nbsp;basta&nbsp;inverter&nbsp;a&nbsp;lógica.</p><p><br></p><p>Apesar&nbsp;do&nbsp;método&nbsp;bolha&nbsp;ser&nbsp;amplamente&nbsp;conhecido&nbsp;no&nbsp;mundo&nbsp;da&nbsp;programação&nbsp;ele&nbsp;não&nbsp;é&nbsp;o&nbsp;método&nbsp;de&nbsp;ordenação&nbsp;mais&nbsp;efetivo.&nbsp;</p>","classContract":{"name":"BubbleSort","fields":[],"methods":[{"name":"ordenar","parameters":"vetor","description":""}]},"scenarios":[{"id":"0536a1c5-0718-48f1-b929-5e2b6293ef0c","name":"Ordenar","description":"Realize a ordenação do container/vetor recebido utilizando o método bolha conforme explicado na descrição do problema.","code":"const container = context.newContainer(5);\r\ncontainer.set(0, 5);\r\ncontainer.set(1, 2);\r\ncontainer.set(2, 3);\r\ncontainer.set(3, 1);\r\ncontainer.set(4, 4);\r\n\r\nbubbleSort.ordenar(container);\r\n\r\nconst raw = container.container;\r\nassertion.assertEquals(1, raw[0], 'O primeiro elemento está inválido.');\r\nassertion.assertEquals(2, raw[1], 'O segundo elemento está inválido.');\r\nassertion.assertEquals(3, raw[2], 'O terceiro elemento está inválido.');\r\nassertion.assertEquals(4, raw[3], 'O quarto elemento está inválido.');\r\nassertion.assertEquals(5, raw[4], 'O quinto elemento está inválido.');"}],"solution":"class BubbleSort {\n\n\tconstructor() {}\n\n\tordenar(vetor) {\n\t\t// Variável que otimiza a ordenação parando-a\n\t\t// caso não tenha mais itens a serem ordenados\n\t\tlet trocou = false;\n\t\tlet ultimo_indice = 0;\n\n\t\tdo {\n\t\t\ttrocou = false;\n\t\t\tfor (let i = vetor.size() - 2; i >= ultimo_indice; i--) {\n\t\t\t\tconst elemento_1 = vetor.get(i + 1);\n\t\t\t\tconst elemento_2 = vetor.get(i);\n\t\t\t\tif (elemento_1 < elemento_2) {\n\t\t\t\t\tvetor.set(i + 1, elemento_2);\n\t\t\t\t\tvetor.set(i, elemento_1);\n\t\t\t\t\ttrocou = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tultimo_indice++;\n\t\t} while (trocou);\n\t}\n\n}"}